package fxml;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.IOException;
import java.net.URL;
import java.util.ResourceBundle;

import main.CursorControl;
import javafx.application.Platform;
import javafx.event.ActionEvent;
import javafx.fxml.FXMLLoader;
import javafx.fxml.Initializable;
import javafx.fxml.FXML;
import javafx.scene.Node;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.Pagination;
import javafx.scene.control.Slider;
import javafx.stage.Stage;

public class fxml_main_controller implements Initializable {
	@FXML
	private Button caliButton;
	@FXML
	private Pagination test;
	@FXML
	private Slider speedScroll;
	@FXML
	private Label speed;
	@FXML
	private Button add_speed;
	@FXML
	private Button mins_speed;
	@FXML
	private Label calibrate;
	
	private int center=-1;
	@Override
	public void initialize(URL location, ResourceBundle resources) {


	}
	
	
	public void startCalibrating(ActionEvent event) throws IOException
	{
				try {
			Thread.sleep(3000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
		
		caliButton.setVisible(false);
		
		CursorControl.turnCalibrateOn();
		main.MainActivity.get_the_control().start_yaws_calibrate();
		main.MainActivity.get_the_control().keyboard_init_ready=true;
		String path="/fxml/main2.fxml";
		String title="calibration";
		ChangeScreen(event,path,title,600,400,center,center);
		main.MainActivity.get_the_control().isStart=true;
//		main.MainActivity.get_the_control()
		
		
		
	}
	
	
	public void changeSpeed(ActionEvent event) throws IOException
	{
		Button temp=(Button)event.getSource();
		String id=temp.getId();
		switch (id){
		case "add_speed":
			if (Integer.parseInt(speed.getText())<100)
			{
				setSpeedLabel(Integer.toString(Integer.parseInt(speed.getText())+5));
				CursorControl.setDistance((Integer.parseInt(speed.getText())-50));

			}
			break;
		case "mins_speed":
			if (Integer.parseInt(speed.getText())>0)
			{
				setSpeedLabel(Integer.toString(Integer.parseInt(speed.getText())-5));
				CursorControl.setDistance((Integer.parseInt(speed.getText())-50));

			}
			
		}
		
	}
	
	public void goToMenu(ActionEvent event) throws IOException
	{
		String path="/fxml/menu.fxml";
		String title="Menu";
		ChangeScreen(event,path,title,600,400,center,center);
		main.MainActivity.get_the_control().changeState(0);
		main.MainActivity.get_the_control().isStart=false;


	}
	public void goToGesture(ActionEvent event) throws IOException
	{
		String path="/fxml/Gesture.fxml";
		String title="Gesture";
		fxml_gesture_menu n=(fxml_gesture_menu)ChangeScreen(event,path,title,600,400,center,center);
		main.MainActivity.get_the_control().get_my_controller().set_my_gesture_menu(n);
	}
	
	
	public void goToMonitor(ActionEvent event) throws IOException
	{
		String path="/fxml/monitor.fxml";
		String title="Monitor";
		fxml_monitor n=(fxml_monitor)ChangeScreen(event,path,title,600,400,center,center);
		main.MainActivity.get_the_control().get_my_controller().set_my_monitor(n);
	}
	public void goToSetting(ActionEvent event) throws IOException
	{
		String path="/fxml/setting.fxml";
		String title="Setting";
	ChangeScreen(event,path,title,600,400,center,center);
	}
	public void goToStart(ActionEvent event) throws IOException
	{
		String path="/fxml/start.fxml";
		String title="Start";

		fxml_start n=(fxml_start)ChangeScreen(event,path,title,600,400,center,center);
	main.MainActivity.get_the_control().get_my_controller().set_my_start(n);

	}
	
	public void setSpeedLabel(String str)
	{	
		speed.setText(str);
	}
	
	
	public Object ChangeScreen(ActionEvent event,String path,String title,int width,int height,double x ,double y) throws IOException
	{FXMLLoader loader = new FXMLLoader(getClass().getResource(path));
		Parent root=loader.load();
		Scene scene=new Scene(root,width,height);
	    Stage stageTheEventSourceNodeBelongs = (Stage) ((Node)event.getSource()).getScene().getWindow();
	    if(x!=center){
	    stageTheEventSourceNodeBelongs.setX(x);
	    }
	    if(y!=center){
	    stageTheEventSourceNodeBelongs.setY(y);
	    }
	    stageTheEventSourceNodeBelongs.setScene(scene);
	    stageTheEventSourceNodeBelongs.setTitle(title);
	    stageTheEventSourceNodeBelongs.show();
	    

		return loader.getController();

		
		
	}

}
