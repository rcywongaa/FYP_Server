import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;

import javax.swing.JFrame;
 
public class MainActivity 
{
	static SerialReader reader;
	static Renderer renderer;
	final static ScheduledExecutorService scheduler = Executors.newScheduledThreadPool(1);
    public static void main(String[] args) 
    {
    	reader = new SerialReader();
    	renderer = new Renderer();
    	 
        JFrame frame = new JFrame( "Hello World" );
        frame.getContentPane().add( renderer.getCanvas());
 
        // shutdown the program on windows close event
        frame.addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent ev) {
            	reader.close();
                System.exit(0);
            }
        });
 
        frame.setSize( frame.getContentPane().getPreferredSize() );
        frame.setVisible( true );
        
        reader.initialize();
        
        scheduleReader();
        
    }
    
    public static void scheduleReader() {
    	final Runnable readRunner = new Runnable(){
    		public void run(){
    			if (reader.isReady()){
    				if (renderer.getHand().isInit() == false){
    					renderer.getHand().initRadAngles(Hand.Side.RIGHT, reader.read());;
    				}
    				else {
    					renderer.getHand().setRadAngles(reader.read());
    					renderer.getHand().getXYCoord(Hand.INDEX);
    				}
    			}
    			//System.out.println("Periodic Event");
    		}
    	};
    	scheduler.scheduleAtFixedRate(readRunner, 5000, 1, TimeUnit.MILLISECONDS);
    }
}