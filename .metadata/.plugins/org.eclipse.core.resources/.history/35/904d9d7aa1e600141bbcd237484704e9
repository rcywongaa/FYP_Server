import java.io.BufferedReader;
import java.io.OutputStream;
import java.util.concurrent.Semaphore;
import java.util.concurrent.locks.ReentrantLock;

/*
 * TODO: Handle illegal read of old data
 */

public abstract class CommReader {
	protected boolean newData = false;
	//protected Semaphore newSemaphore = new Semaphore(1, true);
	//protected Semaphore semaphore = new Semaphore(1, true);
	protected ReentrantLock dataLock = new ReentrantLock(true);
	protected ReentrantLock updateLock = new ReentrantLock(true); 
	protected DataSet dataSet = new DataSet();
	protected BufferedReader input;
	protected OutputStream output;
	
	public abstract void initialize();
	
	public abstract void close();
	
	public DataSet read(){
		//newSemaphore.acquireUninterruptibly();
		//semaphore.acquireUninterruptibly();
		updateLock.lock();
		dataLock.lock();
		DataSet result = dataSet.copy();
		//newData = false;
		//semaphore.release();
		dataLock.unlock();
		return result;
	}
	
	public boolean isReady(){
		//semaphore.acquireUninterruptibly();
		boolean result = newData;
		//semaphore.release();
		return result;
	}
}
